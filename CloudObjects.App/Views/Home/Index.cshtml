@using CloudObjects.App.Extensions 
@model CloudObjects.App.ViewModels.HomeView

@{ 
    ViewBag.Title = "CloudObjects API";
}

<section class="hero">
    <div class="hero-body has-text-centered">
        <h1 class="title">CloudObjects API</h1>
        <h2 class="is-size-5 mb-3">A REST API storage solution for runtime objects with a C# client. Like Azure Table Storage, but simpler.</h2>
        <p>
            <a href="/swagger" class="button mr-3">Swagger Doc</a>
            <a href="https://github.com/adamfoneil/CloudObjects" class="button mr-3">GitHub repo</a>
            <a href="https://www.nuget.org/packages/AO.CloudObjects.Client" class="button">NuGet Package</a>
        </p> 
        <p class="is-size-6 mt-3">This is for fun and tutorial purposes. Probably not a real service.</p>
        <p class="is-size-6">Made with: <a href="https://dotnet.microsoft.com/apps/aspnet/web-apps">.NET Core 3.1</a> on the backend and powered by <a href="https://github.com/reactiveui/refit">Refit</a> in the client.</p>
    </div>
</section>

@if (Model.IsLocal && !Model.HasValidDb)
{
    <div class="is-flex is-align-items-center has-text-centered">
        <div class="mr-2">Local database is missing: </div>
        <form method="post" action="/Home/CreateLocalDb">
            <button class="button is-warning">Create Local Database</button>
        </form>
    </div>    
}


<section class="section">
    <h1 class="title is-size-4 has-text-centered">Getting Started</h1>
    <p class="my-3">First, install the <a href="https://www.nuget.org/packages/AO.CloudObjects.Client">NuGet package</a> in your poject.</p>
    <p class="my-3">Then, if you have done so already, create an account and get a key. You can do this programmatically as shown below.</p>

<pre class="my-3">
var client = new CloudObjectsClient(HostLocations.Online);
var account = await client.CreateAccountAsync("my-storage-account");

// save this key somewhere -- you won't be able to see it again
Console.WriteLine($"key = {account.Key}");
</pre>

<p class="my-3">... Or you can get a key interactively through the <a href="/swagger">Swagger</a> page using the <code>Account / Post</code> endpoint.</p>
</section>


<section class="section">
    <h1 class="title is-size-4 has-text-centered">Typical Use</h1>
<p class="my-3">After you have a key, you can start storing and retrieving objects. Here's an example of storing an object as 
    <code>object1</code> of type <code>MyObjectType</code>.
    You can use any type that can serialize to json.</p>

<p class="my-3">When you use the <a href="https://github.com/adamfoneil/CloudObjects/blob/master/CloudObjects.Client/CloudObjectsClient.cs#L83">SaveAsync</a> 
    or <a href="https://github.com/adamfoneil/CloudObjects/blob/master/CloudObjects.Client/CloudObjectsClient.cs#L70">CreateAsync</a> methods, 
    you get back a <a href="https://github.com/adamfoneil/CloudObjects/blob/master/CloudObjects.Client/Models/CloudObject.cs">CloudObject&lt;T&gt;</a></p>

<pre class="my-3">
class Program
{
    static async Task Main(string[] args)
    {
        var client = new CloudObjectsClient("test-account-479", "your key");
            
        var obj = await client.SaveAsync("object1", new MyObjectType()
        {
            FirstName = "Yardie",
            LastName = "Swathmore",
            Greeting = "avast!"
        });

        Console.WriteLine($"saved as object id = {obj.Id}, length = {obj.Length}");
    }
}

public class MyObjectType
{
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string Greeting { get; set; }
}
</pre>

<p class="my-3">To retrieve an object, use the <a href="https://github.com/adamfoneil/CloudObjects/blob/master/CloudObjects.Client/CloudObjectsClient.cs#L96">GetAsync</a> method like this. This
    will give you a <code>CloudObject&lt;T&gt;</code>. From this you use the <a href="https://github.com/adamfoneil/CloudObjects/blob/master/CloudObjects.Client/Models/CloudObject.cs#L25">Object</a>
    property to access your original object.</p>

<pre class="my-3">
var client = new CloudObjectsClient("test-account-479", "your key");
var obj = await client.GetAsync&lt;MyObjectType&gt;("object1");
Console.WriteLine($"First name = {obj.Object.FirstName}");
Console.WriteLine($"Last name = {obj.Object.LastName}");
Console.WriteLine($"Greeting = {obj.Object.Greeting}");
</pre>
</section>
